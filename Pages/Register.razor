@page "/user/add"
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.WebUtilities
@using System.Text
@inject SignInManager<User> signInManager;
@inject NavigationManager Navigation

<PageTitle>Thêm người dùng</PageTitle>

<h1>Nhập thông tin người dùng</h1>

<EditForm Model="@Model" OnValidSubmit="@Submit">
    <div class="mb-3">
        <div class="form-group">
            <label for="username">Tên tài khoản</label>
            <InputText @bind-Value="@Model!.Username" class="form-control" id="username"></InputText>
        </div>

        <div class="form-group">
            <label for="password">Tên tài khoản</label>
            <InputText type="password" @bind-Value="@Model!.Password" class="form-control" id="password"></InputText>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Tạo</button>
    <button type="button" class="btn btn-danger">Huỷ</button>
</EditForm>


@code {

    public InputModel? Model { get; set; }

    protected override void OnInitialized()
    {
        Model = new InputModel();
    }

    private async Task Submit(EditContext editContext)
    {
        if (editContext.Validate() && Model is not null)
        {
            var user = new User()
            {
                UserName = Model.Username,
                LockoutEnabled = false
            };
            var r = await signInManager.UserManager.CreateAsync(user, Model.Password);
            if (r.Succeeded)
            {
                user = await signInManager.UserManager.FindByNameAsync(user.UserName);
                var code = await signInManager.UserManager.GenerateEmailConfirmationTokenAsync(user);
                await signInManager.UserManager.ConfirmEmailAsync(user, WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code)));
                Navigation.NavigateTo("user/list");
            }
        }
    }

}